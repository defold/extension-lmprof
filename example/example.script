local function stop_profiler()
    local path = ""
    local filename = "profresult.json"
    local fullpath = path..filename
    if not _G.profilerlmprof:stop(fullpath) then
        error("Failure!")
    end
    print("Result of memory profiling has saved on disk.")

    local report_postprocess = require("lmprof.scripts.report_postprocess")
    report_postprocess.filter_out_lines_with(fullpath, "chrome.json", {
        -- "%? %[C%]", -- remove "? [C]"
        -- "%(for generator%) %[C%]", -- remove "(for generator) [C]"
        -- "self %[C%]" -- remove "self [C]"
        "%[C%]" -- remove all "[C]" callse
    })
end

function init(self)
    print("Init ", lmprof.has_io())
    
    lmprof.set_option("gc_count", true)
    lmprof.set_option("mismatch", true)
    lmprof.set_option("micro", true)
    lmprof.set_option("compress_graph", true)
    lmprof.set_option("compress", true)
    lmprof.set_option("threshold", 100) -- 1000 microseconds = 1 ms
    _G.profilerlmprof = lmprof.create("instrument", "memory", "trace"):calibrate()
    
    _G.profilerlmprof:start()
    _G.profilerlmprof:begin_frame()
    
    self.tbl = {}
    local tb = {}
    for i = 1, 1000 do
        tb[#tb + 1] = math.random()
    end
    
    timer.delay(1, false, function()
        stop_profiler()
        sys.exit(0)
    end)

    print("Init done") 
end

function final(self)
    -- Add finalization code here
    -- Remove this function if not needed
end

local function tail()
    return math.random()
end

function update(self, dt)
    local tb = self.tbl
    for i = 1, 1000 do
        tb[#tb + 1] = tail()
    end
    if _G.profilerlmprof:get_state("running") then
        _G.profilerlmprof:end_frame()
        _G.profilerlmprof:begin_frame()
    end
end

function on_message(self, message_id, message, sender)
    -- Add message-handling code here
    -- Remove this function if not needed
end

function on_input(self, action_id, action)
    -- Add input-handling code here
    -- Remove this function if not needed
end

function on_reload(self)
    -- Add reload-handling code here
    -- Remove this function if not needed
end
